{"version":3,"sources":["Country.js","CountryList.js","SearchBox.js","App.js","reportWebVitals.js","index.js"],"names":["Country","stats","className","src","CountryCode","alt","Active","Confirmed","Deaths","Recovered","CountryList","map","country","SearchBox","placeholder","handleChange","type","onChange","App","e","setState","searchField","target","value","state","countries","a","fetch","resp","json","this","forEach","Slug","data","length","prevState","concat","ISO2","filteredCountries","filter","toLowerCase","includes","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wVAiBeA,EAfC,SAAC,GAAa,IAAZC,EAAW,EAAXA,MACd,OACI,sBAAKC,UAAU,UAAf,UACI,qBAAKC,IAAG,sCAAiCF,EAAMG,YAAvC,gBAAkEC,IAAKJ,EAAMD,UACrF,6BAAKC,EAAMD,UACX,sBAAKE,UAAU,WAAf,UACI,+CAAgBD,EAAMK,UACtB,kDAAmBL,EAAMM,aACzB,+CAAgBN,EAAMO,UACtB,kDAAmBP,EAAMQ,oBCE1BC,G,MATK,SAAC,GAAY,IAAXT,EAAU,EAAVA,MAClB,OACI,qBAAKC,UAAU,cAAf,SAEKD,EAAMU,KAAI,SAAAC,GAAO,OAAG,cAAC,EAAD,CAAmCX,MAAOW,GAA5BA,EAAQR,oBCIxCS,G,MAVG,SAAC,GAA+B,IAA9BC,EAA6B,EAA7BA,YAAYC,EAAiB,EAAjBA,aAC5B,OACI,uBAAOC,KAAK,SACZd,UAAU,SACVY,YAAaA,EACbG,SAAYF,MCqCLG,E,kDAvCb,aAAc,IAAD,8BACX,gBAoBFH,aAAe,SAACI,GACd,EAAKC,SAAS,CAACC,YAAYF,EAAEG,OAAOC,SApBpC,EAAKC,MAAQ,CACZC,UAAU,GACVxB,MAAM,GACNoB,YAAY,IALF,E,4FAQb,qCAAAK,EAAA,sEACqBC,MAAM,wCAD3B,cACQC,EADR,gBAE0BA,EAAKC,OAF/B,OAEQJ,EAFR,OAGEK,KAAKV,SAAS,CAACK,cACfK,KAAKN,MAAMC,UAAUM,QAArB,uCAA6B,WAAMnB,GAAN,iBAAAc,EAAA,sEACRC,MAAM,4CAAD,OAA6Cf,EAAQoB,OADlD,cACrBJ,EADqB,gBAERA,EAAKC,OAFG,QAErBI,EAFqB,QAGnBC,QACR,EAAKd,UAAS,SAAAe,GAAS,MACrB,CAAClC,MAAMkC,EAAUlC,MAAMmC,OAAhB,2BAA2BH,EAAKA,EAAKC,OAAS,IAA9C,IAAiD9B,YAAYQ,EAAQyB,YALnD,2CAA7B,kCAAAP,KAAA,gBAJF,gD,0EAgBA,WAAS,IAAD,EACsBA,KAAKN,MAA1BvB,EADD,EACCA,MAAMoB,EADP,EACOA,YACPiB,EAAoBrC,EAAMsC,QAAO,SAAA3B,GAAO,OAC5CA,EAAQZ,QAAQwC,cAAcC,SAASpB,EAAYmB,kBAErD,OACE,sBAAKtC,UAAU,MAAf,UACE,wDACA,cAAC,EAAD,CAAWY,YAAY,yBAAyBC,aAAce,KAAKf,eACnE,cAAC,EAAD,CAAad,MAASqC,W,GAlCZI,IAAMC,WCQTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.343c46f0.chunk.js","sourcesContent":["import React from 'react';\nimport './country.css';\nconst Country = ({stats}) => {\n    return(\n        <div className='country'>\n            <img src={`https://www.countryflags.io/${stats.CountryCode}/flat/64.png`} alt={stats.Country}></img>\n            <h2>{stats.Country}</h2>\n            <div className='describe'>\n                <p>{`Active : ${stats.Active}`}</p> \n                <p>{`Confirmed : ${stats.Confirmed}`}</p> \n                <p>{`Deaths : ${stats.Deaths}`}</p> \n                <p>{`Recovered : ${stats.Recovered}`}</p> \n            </div>\n        </div>\n    )\n}\n\nexport default Country;","import React from 'react';\nimport Country from './Country';\nimport './countryList.css';\n\nconst CountryList = ({stats}) =>{\n    return(\n        <div className='countrylist'>\n            {\n             stats.map(country =><Country key={country.CountryCode} stats={country}/>)\n            }\n        </div>\n    )\n}\nexport default CountryList;","import React from 'react';\nimport './searchBox.css'\nconst SearchBox = ({placeholder,handleChange}) =>{\n    return(\n        <input type='search'\n        className='search'\n        placeholder={placeholder}\n        onChange = {handleChange}\n        />\n    )\n}\n\nexport default SearchBox;","import React from 'react';\nimport './app.css';\nimport CountryList from './CountryList';\nimport SearchBox from './SearchBox';\nclass App extends React.Component{\n  constructor(){\n    super();\n    this.state = {\n     countries:[],\n     stats:[],\n     searchField:''\n    }\n  }\n  async componentDidMount(){\n    const resp = await fetch('https://api.covid19api.com/countries')\n    const countries = await resp.json()\n    this.setState({countries})\n    this.state.countries.forEach(async country => {\n      const resp = await fetch(`https://api.covid19api.com/total/country/${country.Slug}`)\n      const data = await resp.json()\n      if(data.length)\n      this.setState(prevState => (\n        {stats:prevState.stats.concat({...data[data.length - 1],CountryCode:country.ISO2})}\n      ))\n    })\n  }\n  handleChange = (e) =>{\n    this.setState({searchField:e.target.value})\n  }\n  render(){\n    const {stats,searchField} = this.state\n    const filteredCountries = stats.filter(country =>(\n      country.Country.toLowerCase().includes(searchField.toLowerCase())\n    ))\n    return(\n      <div className=\"App\">\n        <h1>Global Covid19 Tracker</h1>\n        <SearchBox placeholder=\"Enter country name ...\" handleChange={this.handleChange}/>\n        <CountryList stats = {filteredCountries}/>\n    </div>\n    )\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}